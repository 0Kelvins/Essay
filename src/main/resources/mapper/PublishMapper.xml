<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.like.dao.PublishMapper" >
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache">
    <property name="timeToIdleSeconds" value="30"/>
    <property name="timeToLiveSeconds" value="30"/>
    <property name="maxEntriesLocalHeap" value="1000"/>
    <property name="maxEntriesLocalDisk" value="10000000"/>
    <property name="memoryStoreEvictionPolicy" value="LRU"/>
  </cache>

  <resultMap id="BaseResultMap" type="com.like.entity.Publish" >
    <id column="publish_id" property="publishId" jdbcType="INTEGER" />
    <result column="essay_id" property="essayId" jdbcType="INTEGER" />
    <result column="plate_id" property="plateId" jdbcType="INTEGER" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="illustration" property="illustration" jdbcType="VARCHAR" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="pageviews" property="pageviews" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="PublishUserResultMap" type="com.like.api.DTO.PublishEssayDTO">
    <result column="title" property="title" jdbcType="VARCHAR" />
    <association property="publish" javaType="com.like.entity.Publish" resultMap="BaseResultMap"/>
    <association property="author" javaType="com.like.api.DTO.AuthorDTO">
      <id property="userId" column="user_id"/>
      <result property="username" column="username"/>
      <result property="avatar" column="avatar"/>
      <result property="gender" column="gender"/>
      <result property="instruction" column="instruction"/>
    </association>
  </resultMap>

  <sql id="Base_Column_List" >
    publish_id, essay_id, plate_id, summary, illustration, publish_time, update_time,
    pageviews
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from publish
    where publish_id = #{publishId,jdbcType=INTEGER}
  </select>
  <select id="selectByEssayId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from publish
    where essay_id = #{essayId,jdbcType=INTEGER}
  </select>
  <select id="selectPublishEssayList" resultMap="PublishUserResultMap">
    select
      p.*,
      e.title,
      u.user_id,
      u.username,
      u.avatar,
      u.gender,
      u.instruction
    from publish p
         left join essay e on e.essay_id = p.essay_id
         left join user u on u.user_id = e.user_id
    where 1 = 1
    <if test="publishPage.beginDate != null" >
      and p.publish_time &gt; #{publishPage.beginDate,jdbcType=INTEGER}
    </if>
    <if test="publishPage.plateId != null" >
      and p.plate_id = #{publishPage.plateId,jdbcType=INTEGER}
    </if>
    <if test="publishPage.search != null" >
      and e.title like #{publishPage.search,jdbcType=INTEGER}
    </if>
    <choose>
      <when test="publishPage.sortMethod == 0">
        order by p.publish_time desc, p.pageviews desc
      </when>
      <otherwise>
        order by p.pageviews desc, p.publish_time desc
      </otherwise>
    </choose>
  </select>
  <select id="selectPersonPublishList" resultMap="PublishUserResultMap">
    select
    p.*,
    e.title
    from publish p
    left join essay e on e.essay_id = p.essay_id
    where e.user_id = #{userId,jdbcType=INTEGER}
    order by p.publish_time desc, p.pageviews desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from publish
    where publish_id = #{publishId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.like.entity.Publish" >
    insert into publish (publish_id, essay_id, plate_id, 
      summary, illustration, publish_time, 
      update_time, pageviews)
    values (#{publishId,jdbcType=INTEGER}, #{essayId,jdbcType=INTEGER}, #{plateId,jdbcType=INTEGER}, 
      #{summary,jdbcType=VARCHAR}, #{illustration,jdbcType=VARCHAR}, #{publishTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{pageviews,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.like.entity.Publish" >
    insert into publish
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="publishId != null" >
        publish_id,
      </if>
      <if test="essayId != null" >
        essay_id,
      </if>
      <if test="plateId != null" >
        plate_id,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="illustration != null" >
        illustration,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="pageviews != null" >
        pageviews,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="publishId != null" >
        #{publishId,jdbcType=INTEGER},
      </if>
      <if test="essayId != null" >
        #{essayId,jdbcType=INTEGER},
      </if>
      <if test="plateId != null" >
        #{plateId,jdbcType=INTEGER},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="illustration != null" >
        #{illustration,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pageviews != null" >
        #{pageviews,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.like.entity.Publish" >
    update publish
    <set >
      <if test="essayId != null" >
        essay_id = #{essayId,jdbcType=INTEGER},
      </if>
      <if test="plateId != null" >
        plate_id = #{plateId,jdbcType=INTEGER},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="illustration != null" >
        illustration = #{illustration,jdbcType=VARCHAR},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pageviews != null" >
        pageviews = #{pageviews,jdbcType=INTEGER},
      </if>
    </set>
    where publish_id = #{publishId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.like.entity.Publish" >
    update publish
    set essay_id = #{essayId,jdbcType=INTEGER},
      plate_id = #{plateId,jdbcType=INTEGER},
      summary = #{summary,jdbcType=VARCHAR},
      illustration = #{illustration,jdbcType=VARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      pageviews = #{pageviews,jdbcType=INTEGER}
    where publish_id = #{publishId,jdbcType=INTEGER}
  </update>
  <update id="updateForAddPageViews" parameterType="java.lang.Integer" >
    update publish
    set pageviews = pageviews + 1
    where essay_id = #{essayId,jdbcType=INTEGER}
  </update>
</mapper>