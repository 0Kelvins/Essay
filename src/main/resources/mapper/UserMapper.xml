<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.like.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.like.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="account_state" property="accountState" jdbcType="INTEGER" />
    <result column="register_time" property="registerTime" jdbcType="TIMESTAMP" />
    <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="instruction" property="instruction" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, account, username, password, account_state, register_time, cancel_time, 
    avatar, gender, instruction
  </sql>
  <sql id="Main_Column_List" >
    user_id, account, username, account_state, register_time, cancel_time,
    avatar, gender, instruction
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByAccount" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select count(1) from user
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <select id="selectByAccountPassword" resultMap="BaseResultMap" parameterType="com.like.entity.User" >
    select
    <include refid="Main_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
    and password = #{password,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.like.entity.User" >
    insert into user (user_id, account, username, 
      password, account_state, register_time, 
      cancel_time, avatar, gender, 
      instruction)
    values (#{userId,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{accountState,jdbcType=INTEGER}, #{registerTime,jdbcType=TIMESTAMP}, 
      #{cancelTime,jdbcType=TIMESTAMP}, #{avatar,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{instruction,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.like.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="accountState != null" >
        account_state,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="cancelTime != null" >
        cancel_time,
      </if>
      <if test="avatar != null" >
        avatar,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="instruction != null" >
        instruction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountState != null" >
        #{accountState,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="instruction != null" >
        #{instruction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.like.entity.User" >
    update user
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="accountState != null" >
        account_state = #{accountState,jdbcType=INTEGER},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="instruction != null" >
        instruction = #{instruction,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.like.entity.User" >
    update user
    set account = #{account,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      account_state = #{accountState,jdbcType=INTEGER},
      register_time = #{registerTime,jdbcType=TIMESTAMP},
      cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      avatar = #{avatar,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      instruction = #{instruction,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>